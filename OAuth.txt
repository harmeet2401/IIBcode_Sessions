OAuth  : open authorization :  https://www.tutorialspoint.com/spring_boot/spring_boot_oauth2_with_jwt.htm

	Resource Owner 
		A user  ----------------------> client Application -----------------------------> Resource data (Exposed using a rest full api ) 
										Third party apps 
												|
												|
												|
										        |
												|
										        |
												|
										    Auth server 
											
											Example:
											spring authorization server
											keycloak authorization server
											AWS Cognito 
											Microsoft identity platform 
											OKTA 
											
1. Resource owener is the one which is trying to access his/her data from the resource server which is exposed using a rest full api 
2. Auth server : which will grant a authorization access token for the third party client app which is going o access the data on behalf oof the user.
3. Client app : which is a thidr party app 
4. Resource server : where the data is residing and exposed using the restfull api.											

5. spring security OAuth project : github.com/spring-projects/spring-security-oauth/  (deprecated but we can use it)
	This contais : 		
			1. Authorization server
			2. Resource Servr
			3. Client support.
			
	spring OAuth security prject 5 : which is the new project :  https://github.com/spring-projects-experimental/spring-authorization-server/	
						
	
	
 process of Oauth : 

Note : Before that the Client application need to be registered on the authorization server and a client id , client secret will be returnred
1. First the user will send a request to the client app.
2. Second the client app will send the request along with client id and client secrect to the Authorization server to get the access token 
3. Then the client app using the access token hits the actual resource server to get the data needed by the user or the consumer.
4. The resource server or the api will verify the access token from the Authorization server if the access token is not fake and is valid. Then process the request and sends a response back.


 Token type: 
	Identifier : alpha numeric 
	Self contained the authorization information : encoded  if you decode it it will give you a json object 
			- header section 
			- payload section 
			- access token 
   