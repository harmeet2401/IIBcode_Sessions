OCP CLI commands --------------------------------------------------------------
oc login -u username -p password ---------------------------------------------- to login to OCP cluster
oc get pods ------------------------------------------------------------------- To get the pods running on current project selected in OCP cluster node.
oc project nameofproject ------------------------------------------------------ to switch to a new project and start using it.
oc get projects --------------------------------------------------------------- to get to know which projects are there in ocp cluster.
oc project -------------------------------------------------------------------- to get to which project currently using .
oc delete all --ll ------------------------------------------------------------ this will delete all the resources (Deployment ,deployment config , services , route , image stream , buld config , build )
oc delete secret --all --------------------------------------------------------  this will delete all the secrets 
oc new-app jenkins-ephemeral(this is the image name) --------------------------  this will create a deployement config and run a pod for jenkins server .
	Will create below resources : 
		1. DC 
		2. Route 
		3. 2 Services 
		4. Config map 
oc delete all -l app=hello-world ---------------------------------------------- this will delete all the resources connected to app= hello-world		
oc status --------------------------------------------------------------------- this will show you all the Dc , bc , route ,services and other configuration done apps in the current project. using this command you can check the exposed url as well.
output of oc status :                								
				svc/hello-world - 172.30.180.208:8080							--------- Service
					dc/hello-world deploys istag/hello-world:latest             --------- Deployement config
						deployment #1 deployed 8 minutes ago - 1 pod			---------1 pod
oc explain pod :---------------------------------------------------------------- to get the description of the pod
oc explain pod.spec :----------------------------------------------------------- spec is one of the field in pod
oc explain pod.spec.containers :------------------------------------------------ containers is a field inside spec.
oc create -f pod.yaml ---------------------------------------------------------- this will create the pod on ocp 
oc delete pod/nameofthepod ----------------------------------------------------- this will delete the pod
oc get pods --watch ------------------------------------------------------------ this will keep a watch on the pod list . on the other terminal you can create an another pod and see it getting creating in earlier one . real time changes.
oc explain pod.spec.containers.env----------------------------------------------- this will show the inbult documentation for resource pod.spec.contaiers.env
oc new-app quay.io/practicalopenshift/hello-world --as-deployment-config  : oc new-app imagetagname --as-deployment-config ------- used to create a deployment config.
oc status ----------------------------------------------------------------------- this will show you all the resource and check your app 
oc expose svc/hello-world ------------------------------------------------------- this will expose the service(load balancer) to outside world and creates a route for it.
oc get svc				--------------------------------------------------------- will give service
oc get dc 			  ----------------------------------------------------------- will give deploymentconfig
oc get istag          ----------------------------------------------------------- image stream tag		
oc delete svc/hello-world ------------------------------------------------------- dleete the service
oc delete dc/hello-world  ------------------------------------------------------- delete deployment config.
oc describe dc/hello-world ------------------------------------------------------ describe the dc with label 
oc delete all -l app=hello-world ------------------------------------------------ then use -l and mention the label got from describe command and delete the resources.
oc new-app quay.io/practicalopenshift/hello-world --name demo-app --as-deployment-config ---------------- this will create a deployment config with label name as demo-app		
oc new-app https://gitlab.com/practical-openshift/hello-world.git --as-deployment-config----------------- Similar to above command just we are giving the git repository url to create a DC using the Dockerfile present in the git repository.

