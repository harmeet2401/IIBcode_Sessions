Java Course ----------------------------------------
1. java is iteroperable or can be run on multiple platform using the JVM(java virtual machine) on the target system .
2. Platform independent : Java bytecode created by the java compiler .
	The byte code we can run it on the jvm in target system .
	
	
	
	
	java code ------------------------> compiler -----------> byte code --------------> translate the byte code to binary codes-----------------> Run on target system.
	
	C and c++ compiler doesnot create a byte code. It sirectly run the binary code post compilation 
	
	Because of the extra step in java of creating a byte code its some says its slower . But we can use JUST-IN-TIME-COMPILER .  whic at the same time converts the byte code to the binary code and machine language.
3. JRE and JDk and JVM : 
	- JRE : Java run time environments.
		Its a software package that only contains the JVM and class liberaries which are required to run a java program . we can not compile the java program using a JRE.
		It provide just in run time env.
	- JDK : Java development kit : 
		Its a combination of JRE and Java compiler .
		Compiler will helps in compiling the new java code and JRE containg JVM will help in running the code by converting the byte code to binary language.
	

NOTE : IN NUT SHELL , IF WE NEED TO WRITE , COMPILE AND RUN THE CODE WE NEED JDK WHICH HAVE JRE AND COMPILER . IF WE WANT TO RUN A JAR FILE OR THE .CLASS FILE WE ONLY NEED JRE AS IT PROVIDES THE JVM FOR RUNNING THE CODE.

4. Class is the blueprint from which we an create the different objects .
	understand it like class is a generic page or higher classification . Like person : ----person is a blue print for two types of persons(girl or  a boy.)
	
5. Life of objects :  So we know that : Person a = new Person();

			Person a ----------> its like creating a reference object and a romote control ready to point to a  memory locations.
			
			new Person ---------> This will create a heap memory allocations .
				
				In order start making the ref remote cnotrol pointing to heap mem allocated we need to link these.
				
				Person a = new Person();
				
			In my view creating multiple objects and heap memory with it will use more memory space of you system .
			Instead we can point the reference object to the same heap memory space . But that might end up bombarding the healp memory used by all instance objects 
6. Package name :  Collections of classes.

	Access modifier default is it is access with in the class only . 
	if we put that in different package we need to make it public to import it another clas. 
	
	private  : will be access with same class and package 
	protected   : 
	public  : can be access from anywhere 
	default : can access only with in clas
	
7. variables and data types  :

	a.  Premitive data type variable  : like : char , int , short , long , double . All these have different storage size.
			variables : Instance variable and Local variable
			- Instance variable : 
				Those variables which reside inside the class level. and is get initialized whenever the instance of that class is created,
			- Local variable : 
				Those variable declared inside the mthod os the class . those variables should be initialized or else the compiler will complaint.
				default value for int, byte , long , short =  0 , boolean is false ,  float , double  = 0.0 and for char = '\u0000'
				
	b.  Reference variable : Are the variable which are refrencesd to the heap memory .
			Person alex  = new Person();
			-----------
				|
				|
				|
			Reference variable .	

				