1. Given an array of integers, find the maximum sum of any contiguous subarray of the array.
Kadane's Algorithm  for maximum sum of subarray
Steps : 
    - First maXEndingHere and maxSoFar ko first element ko lo
    - iterate through each element starting from second element(index 1) 
        - Update maxEndingHere = Maximum of element iterated and sum of maxEnding and element iterated
        - update maxSofar = Maximum of maxEndingHere and maxSoFar


public class MaximumSubarraySum {
    public static int maxSubarraySum(int[] nums) {
        int maxEndingHere = nums[0];
        int maxSoFar = nums[0];
        
        for (int i = 1; i < nums.length; i++) {
            maxEndingHere = Math.max(nums[i], maxEndingHere + nums[i]);
            maxSoFar = Math.max(maxSoFar, maxEndingHere);
        }
        
        return maxSoFar;
    }

    public static void main(String[] args) {
        int[] nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
        int maxSum = maxSubarraySum(nums);
        System.out.println("Maximum subarray sum: " + maxSum);
    }
}
